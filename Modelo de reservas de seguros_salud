{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/carlowrp/ML-actuaria/blob/main/Modelo%20de%20reservas%20de%20seguros_salud\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KweiuuSQuGXB"
      },
      "source": [
        "# Modelo de reservas de seguros comerciales"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7hJUu5iuuGXD"
      },
      "source": [
        "## Data Understanding"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "ZnKYG4v6uGXD"
      },
      "outputs": [],
      "source": [
        "#importe de librer√≠as\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sb\n",
        "import matplotlib.pyplot as plt\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9j1Q70LAuGXE"
      },
      "source": [
        "los datos sale de la siguiente papgina\n",
        "https://www.casact.org/publications-research/research/research-resources/loss-reserving-data-pulled-naic-schedule-p"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Q6VBhiCnuGXE",
        "outputId": "8dc86be2-a0e9-47f6-c495-824fb3337106"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "with open('/content/drive/MyDrive/Proyecto/medmal_pos.csv', 'r') as file:\n",
        "    base = file.read()"
      ],
      "metadata": {
        "id": "1YgvBYGFvUMn"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "csv_path = '/content/drive/MyDrive/Proyecto/medmal_pos.csv'\n",
        "df = pd.read_csv(csv_path)"
      ],
      "metadata": {
        "id": "lFioAB-fvXIX"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "nTHn9xvcvMTy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 790
        },
        "id": "_pXwZlrWuGXF",
        "outputId": "6625fa70-39b4-4fee-adf7-391f89896017"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      GRCODE                            GRNAME  AccidentYear  DevelopmentYear  \\\n",
              "0        669                Scpie Indemnity Co          1988             1988   \n",
              "1        669                Scpie Indemnity Co          1988             1989   \n",
              "2        669                Scpie Indemnity Co          1988             1990   \n",
              "3        669                Scpie Indemnity Co          1988             1991   \n",
              "4        669                Scpie Indemnity Co          1988             1992   \n",
              "...      ...                               ...           ...              ...   \n",
              "3395   44504  California Healthcare Ins Co Inc          1997             2002   \n",
              "3396   44504  California Healthcare Ins Co Inc          1997             2003   \n",
              "3397   44504  California Healthcare Ins Co Inc          1997             2004   \n",
              "3398   44504  California Healthcare Ins Co Inc          1997             2005   \n",
              "3399   44504  California Healthcare Ins Co Inc          1997             2006   \n",
              "\n",
              "      DevelopmentLag  IncurLoss_F2  CumPaidLoss_F2  BulkLoss_F2  \\\n",
              "0                  1        121905            2716        97966   \n",
              "1                  2        112211           24576        64117   \n",
              "2                  3        103226           43990        39008   \n",
              "3                  4         99599           59722        20736   \n",
              "4                  5         96006           71019        13599   \n",
              "...              ...           ...             ...          ...   \n",
              "3395               6          3970            3971           -1   \n",
              "3396               7          3965            3965            0   \n",
              "3397               8          3965            3965            0   \n",
              "3398               9          3965            3965            0   \n",
              "3399              10          3965            3965            0   \n",
              "\n",
              "      EarnedPremDIR_F2  EarnedPremCeded_F2  EarnedPremNet_F2  Single  \\\n",
              "0               129104               -6214            135318       0   \n",
              "1               129104               -6214            135318       0   \n",
              "2               129104               -6214            135318       0   \n",
              "3               129104               -6214            135318       0   \n",
              "4               129104               -6214            135318       0   \n",
              "...                ...                 ...               ...     ...   \n",
              "3395              9711                5704              4007       1   \n",
              "3396              9711                5704              4007       1   \n",
              "3397              9711                5704              4007       1   \n",
              "3398              9711                5704              4007       1   \n",
              "3399              9711                5704              4007       1   \n",
              "\n",
              "      PostedReserve97_F2  \n",
              "0                 344558  \n",
              "1                 344558  \n",
              "2                 344558  \n",
              "3                 344558  \n",
              "4                 344558  \n",
              "...                  ...  \n",
              "3395               15719  \n",
              "3396               15719  \n",
              "3397               15719  \n",
              "3398               15719  \n",
              "3399               15719  \n",
              "\n",
              "[3400 rows x 13 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-402f561e-8f92-4d88-8409-d65447699285\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GRCODE</th>\n",
              "      <th>GRNAME</th>\n",
              "      <th>AccidentYear</th>\n",
              "      <th>DevelopmentYear</th>\n",
              "      <th>DevelopmentLag</th>\n",
              "      <th>IncurLoss_F2</th>\n",
              "      <th>CumPaidLoss_F2</th>\n",
              "      <th>BulkLoss_F2</th>\n",
              "      <th>EarnedPremDIR_F2</th>\n",
              "      <th>EarnedPremCeded_F2</th>\n",
              "      <th>EarnedPremNet_F2</th>\n",
              "      <th>Single</th>\n",
              "      <th>PostedReserve97_F2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>669</td>\n",
              "      <td>Scpie Indemnity Co</td>\n",
              "      <td>1988</td>\n",
              "      <td>1988</td>\n",
              "      <td>1</td>\n",
              "      <td>121905</td>\n",
              "      <td>2716</td>\n",
              "      <td>97966</td>\n",
              "      <td>129104</td>\n",
              "      <td>-6214</td>\n",
              "      <td>135318</td>\n",
              "      <td>0</td>\n",
              "      <td>344558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>669</td>\n",
              "      <td>Scpie Indemnity Co</td>\n",
              "      <td>1988</td>\n",
              "      <td>1989</td>\n",
              "      <td>2</td>\n",
              "      <td>112211</td>\n",
              "      <td>24576</td>\n",
              "      <td>64117</td>\n",
              "      <td>129104</td>\n",
              "      <td>-6214</td>\n",
              "      <td>135318</td>\n",
              "      <td>0</td>\n",
              "      <td>344558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>669</td>\n",
              "      <td>Scpie Indemnity Co</td>\n",
              "      <td>1988</td>\n",
              "      <td>1990</td>\n",
              "      <td>3</td>\n",
              "      <td>103226</td>\n",
              "      <td>43990</td>\n",
              "      <td>39008</td>\n",
              "      <td>129104</td>\n",
              "      <td>-6214</td>\n",
              "      <td>135318</td>\n",
              "      <td>0</td>\n",
              "      <td>344558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>669</td>\n",
              "      <td>Scpie Indemnity Co</td>\n",
              "      <td>1988</td>\n",
              "      <td>1991</td>\n",
              "      <td>4</td>\n",
              "      <td>99599</td>\n",
              "      <td>59722</td>\n",
              "      <td>20736</td>\n",
              "      <td>129104</td>\n",
              "      <td>-6214</td>\n",
              "      <td>135318</td>\n",
              "      <td>0</td>\n",
              "      <td>344558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>669</td>\n",
              "      <td>Scpie Indemnity Co</td>\n",
              "      <td>1988</td>\n",
              "      <td>1992</td>\n",
              "      <td>5</td>\n",
              "      <td>96006</td>\n",
              "      <td>71019</td>\n",
              "      <td>13599</td>\n",
              "      <td>129104</td>\n",
              "      <td>-6214</td>\n",
              "      <td>135318</td>\n",
              "      <td>0</td>\n",
              "      <td>344558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3395</th>\n",
              "      <td>44504</td>\n",
              "      <td>California Healthcare Ins Co Inc</td>\n",
              "      <td>1997</td>\n",
              "      <td>2002</td>\n",
              "      <td>6</td>\n",
              "      <td>3970</td>\n",
              "      <td>3971</td>\n",
              "      <td>-1</td>\n",
              "      <td>9711</td>\n",
              "      <td>5704</td>\n",
              "      <td>4007</td>\n",
              "      <td>1</td>\n",
              "      <td>15719</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3396</th>\n",
              "      <td>44504</td>\n",
              "      <td>California Healthcare Ins Co Inc</td>\n",
              "      <td>1997</td>\n",
              "      <td>2003</td>\n",
              "      <td>7</td>\n",
              "      <td>3965</td>\n",
              "      <td>3965</td>\n",
              "      <td>0</td>\n",
              "      <td>9711</td>\n",
              "      <td>5704</td>\n",
              "      <td>4007</td>\n",
              "      <td>1</td>\n",
              "      <td>15719</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3397</th>\n",
              "      <td>44504</td>\n",
              "      <td>California Healthcare Ins Co Inc</td>\n",
              "      <td>1997</td>\n",
              "      <td>2004</td>\n",
              "      <td>8</td>\n",
              "      <td>3965</td>\n",
              "      <td>3965</td>\n",
              "      <td>0</td>\n",
              "      <td>9711</td>\n",
              "      <td>5704</td>\n",
              "      <td>4007</td>\n",
              "      <td>1</td>\n",
              "      <td>15719</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3398</th>\n",
              "      <td>44504</td>\n",
              "      <td>California Healthcare Ins Co Inc</td>\n",
              "      <td>1997</td>\n",
              "      <td>2005</td>\n",
              "      <td>9</td>\n",
              "      <td>3965</td>\n",
              "      <td>3965</td>\n",
              "      <td>0</td>\n",
              "      <td>9711</td>\n",
              "      <td>5704</td>\n",
              "      <td>4007</td>\n",
              "      <td>1</td>\n",
              "      <td>15719</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3399</th>\n",
              "      <td>44504</td>\n",
              "      <td>California Healthcare Ins Co Inc</td>\n",
              "      <td>1997</td>\n",
              "      <td>2006</td>\n",
              "      <td>10</td>\n",
              "      <td>3965</td>\n",
              "      <td>3965</td>\n",
              "      <td>0</td>\n",
              "      <td>9711</td>\n",
              "      <td>5704</td>\n",
              "      <td>4007</td>\n",
              "      <td>1</td>\n",
              "      <td>15719</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3400 rows √ó 13 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-402f561e-8f92-4d88-8409-d65447699285')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-402f561e-8f92-4d88-8409-d65447699285 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-402f561e-8f92-4d88-8409-d65447699285');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5ba82a4c-2974-4b64-bce1-72b203081a2a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5ba82a4c-2974-4b64-bce1-72b203081a2a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5ba82a4c-2974-4b64-bce1-72b203081a2a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LXUDt5lhuGXF"
      },
      "source": [
        "El conjunto de datos contiene las siguientes varaibles\n",
        "\n",
        "- GRCODE: C√≥digo  de la compa√±√≠a\n",
        "- GRNAME\n",
        "- AccidentYear\n",
        "- DevelopmentYear\n",
        "- DevelopmentLag\n",
        "- IncurLoss_C\n",
        "- CumPaidLoss_C\n",
        "- BulkLoss_C\n",
        "- EarnedPremDIR_C\n",
        "- EarnedPremCeded_C\n",
        "- EarnedPremNet_C\n",
        "- Single\n",
        "- PostedReserve97_C\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J76tJXnQuGXG"
      },
      "source": [
        "Glenn G. Meyers, PhD, FCAS\n",
        "Peng Shi, doctorado, ASA\n",
        "\n",
        "Dirija todos los comentarios a Glenn Meyers en ggmeyers@metrocast.net\n",
        "\n",
        "Objetivo\n",
        "Nuestro objetivo es preparar un conjunto de datos claro y agradable de tri√°ngulos de p√©rdidas que podr√≠an usarse para estudios de reserva de siniestros. Los datos incluyen importantes l√≠neas de negocios personales y comerciales de aseguradoras de accidentes de propiedad de EE. UU. Los datos de reclamaciones provienen del Anexo P: An√°lisis de p√©rdidas y gastos de p√©rdidas en la base de datos de la Asociaci√≥n Nacional de Comisionados de Seguros (NAIC).\n",
        "\n",
        "Hemos obtenido permiso de la NAIC para poner estos datos a disposici√≥n de todos los investigadores interesados en el sitio web de CAS.\n",
        "\n",
        "Descripci√≥n del Anejo P\n",
        "El Anexo P de la NAIC contiene informaci√≥n sobre reclamaciones de las principales l√≠neas personales y comerciales para todas las aseguradoras de propiedad y accidentes que realizan negocios en EE. UU. Algunas partes tienen secciones que separan las coberturas de ocurrencia de reclamos realizados. Las seis l√≠neas incluidas en esta base de datos son: (1) responsabilidad civil/m√©dica de autom√≥viles de pasajeros privados; (2) responsabilidad m√©dica/de autom√≥viles comerciales/camiones; (3) compensaci√≥n laboral; (4) negligencia m√©dica ‚Äì reclamaciones realizadas; (5) otra responsabilidad ‚Äì ocurrencia; (6) responsabilidad del producto ‚Äì ocurrencia.\n",
        "\n",
        "Para cada una de las seis l√≠neas anteriores, las variables incluidas en el conjunto de datos se extrajeron de cuatro partes diferentes del Anexo P.\n",
        "Parte 1: Prima ganada y algunos datos resumidos de p√©rdidas\n",
        "Parte 2: Tri√°ngulos de p√©rdidas netas incurridas\n",
        "Parte 3: Tri√°ngulos de p√©rdida neta pagada\n",
        "Parte 4 - Reservas a granel e IBNR sobre p√©rdidas netas y gastos de contenci√≥n de costos\n",
        "\n",
        "Preparaci√≥n de datos\n",
        "Los tri√°ngulos consisten en p√©rdidas netas de reaseguro y, muy a menudo, los grupos aseguradores tienen acuerdos mutuos de reaseguro entre las empresas del grupo. En consecuencia, nos centramos en los registros de entidades individuales en la preparaci√≥n de datos, ya sean grupos de aseguradores o aseguradores individuales verdaderos. El proceso de preparaci√≥n de datos tom√≥ tres pasos:\n",
        "\n",
        "Paso I: Extraiga los datos del tri√°ngulo del Anexo P del a√±o 1997. Cada tri√°ngulo incluye reclamaciones de 10 a√±os de accidentes (1988-1997) y 10 retrasos en el desarrollo. Estos datos son los datos de entrenamiento que se pueden utilizar para el desarrollo del modelo.\n",
        "Paso II: Cuadrar los tri√°ngulos del Anexo P del a√±o 1997 con los resultados del Anexo P de a√±os posteriores. Espec√≠ficamente, los datos del a√±o de accidente 1989 se extrajeron del Anexo P del a√±o 1998, los datos del a√±o de accidente 1990 se extrajeron del Anexo P del a√±o 1999, ‚Ä¶‚Ä¶, los datos del a√±o de accidente 1997 se extrajeron del Anexo P del a√±o 2006. Los datos de los tri√°ngulos inferiores se pueden utilizar con fines de validaci√≥n del modelo.\n",
        "Paso III: Muestreo. Realizamos un an√°lisis preliminar para garantizar la calidad del conjunto de datos. Se retuvo a una aseguradora en el conjunto de datos final si se cumplen los siguientes criterios: (1) la aseguradora est√° disponible tanto en el Anexo P del a√±o 1997 como en a√±os posteriores; (2) las observaciones (10 a√±os de accidente y 10 retrasos en el desarrollo) est√°n completas para el asegurador; (3) los reclamos del Anexo P del a√±o 1997 coinciden con los de a√±os posteriores; (4) Las primas netas emitidas no son cero para todos los a√±os.\n",
        "\n",
        "Producto final\n",
        "El producto final es un conjunto de datos que contiene tri√°ngulos de seis l√≠neas de negocio para todas las aseguradoras de accidentes de propiedad de Estados Unidos. Los datos del tri√°ngulo corresponden a reclamaciones de accidentes del a√±o 1988 ‚Äì 1997 con un retraso de 10 a√±os en el desarrollo. Se incluyen los tri√°ngulos superior e inferior para que se puedan utilizar los datos para desarrollar un modelo y luego probar su desempe√±o retrospectivamente. Una lista de variables en los datos es la siguiente:\n",
        "\n",
        "--------------DESCRIPCI√ìN DE LA VARIABLE---------------\n",
        "- GRCODE NAIC c√≥digo de empresa (incluidos grupos de aseguradores y aseguradores individuales)\n",
        "- GRNAME NAIC nombre de la empresa (incluidos grupos de aseguradores y aseguradores individuales)\n",
        "- AccidentYear A√±o del accidente(1988 a 1997)\n",
        "- A√±o de desarrollo A√±o de desarrollo (1988 a 1997)\n",
        "- DesarrolloRetraso A√±o de desarrollo (AY-1987 + DY-1987 - 1)\n",
        "- IncurLoss_ P√©rdidas incurridas y gastos asignados reportados al final del a√±o\n",
        "- CumPaidLoss_ P√©rdidas pagadas acumuladas y gastos asignados al final del a√±o\n",
        "- BulkLoss_ Reservas de Bulk e IBNR sobre p√©rdidas netas y gastos de defensa y contenci√≥n de costos reportados al final del a√±o\n",
        "- PostedReserve97_ Reservas contabilizadas en el a√±o 1997 tomadas del Anexo de Suscripci√≥n e Inversiones - Parte 2A, incluidas las p√©rdidas netas no pagadas y los gastos de ajuste de p√©rdidas no pagados\n",
        "- EarnedPremDIR_ Primas ganadas en el a√±o incurrido: directas y asumidas\n",
        "- EarnedPremCeded_ Primas obtenidas en el a√±o en que se produce - cedidas\n",
        "- EarnedPremNet_ Primas ganadas en el a√±o en que se produce - netas\n",
        "- √önico 1 indica una sola entidad, 0 indica una aseguradora grupal\n",
        "\n",
        "\"_\" SE REFIERE A L√çNEAS DE NEGOCIO\n",
        "B Responsabilidad de autom√≥vil privado de pasajeros/m√©dico\n",
        "C responsabilidad civil de autom√≥viles/camiones comerciales/m√©dicos\n",
        "D Compensaci√≥n para trabajadores\n",
        "F2 Negligencia m√©dica - Reclamaciones realizadas\n",
        "H1 Otros pasivos - Ocurrencia\n",
        "R1 Responsabilidad por productos - Ocurrencia"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nU3ZB4muuGXG"
      },
      "outputs": [],
      "source": [
        "class ChainLadder:\n",
        "    def __init__(self, tabla = pd.DataFrame(), origin = \"\", development = \"\", columns = \"\", index = \"\"):\n",
        "\n",
        "        self.tabla = tabla #OK\n",
        "        self.origin = origin #OK\n",
        "        self.development = development #OK\n",
        "        self.index = index #OK\n",
        "        self.columns = columns #OK\n",
        "\n",
        "    def Triangulos(self):\n",
        "\n",
        "        # Renombrar las columnas\n",
        "        datos = self.tabla.rename(columns={self.origin: \"AccidentYear\", self.development: \"DevelopmentLag\", self.columns: \"IncurLoss_C\",\n",
        "                                          self.index: \"GRCODE\"})\n",
        "\n",
        "        diccionario_todos_triangulos = {}\n",
        "\n",
        "        for k in datos[\"GRCODE\"].unique():\n",
        "\n",
        "            Filtro_datos = datos[datos[\"GRCODE\"] == k]\n",
        "\n",
        "            Triangulo_full = Filtro_datos.pivot_table(values = \"IncurLoss_C\", index = \"AccidentYear\", columns='DevelopmentLag', aggfunc=\"sum\", margins=False)\n",
        "            Triangulo_full_acumulado = Triangulo_full.copy()\n",
        "\n",
        "            num_filas = Triangulo_full_acumulado.shape[0]\n",
        "            num_columnas = Triangulo_full_acumulado.shape[1]\n",
        "\n",
        "            for indice, i in enumerate(range(1,num_columnas+1)):\n",
        "                Triangulo_full_acumulado[Triangulo_full.columns[indice]] = Triangulo_full[Triangulo_full.columns[0:i]].sum(axis = 1)\n",
        "\n",
        "            Triangulo_acumulado_mitad = Triangulo_full_acumulado.copy()\n",
        "            for i in range(num_filas):\n",
        "                for j in range(1,i+1):\n",
        "                    Triangulo_acumulado_mitad.iloc[i, -j] = None  # Puedes establecerlo en None u otro valor si lo prefieres\n",
        "\n",
        "            factores0 = Triangulo_acumulado_mitad.sum(axis = 0) # Rojo\n",
        "            factores1 = Triangulo_acumulado_mitad.sum(axis = 0)-np.flip(np.diag(np.fliplr(Triangulo_acumulado_mitad), 0)) # Azul\n",
        "            factores0 = factores0[1:10]\n",
        "            factores1 = factores1[0:-1]\n",
        "            factores = factores0.reset_index(drop = True) / factores1.reset_index(drop = True)\n",
        "\n",
        "            Triangulo_estimado = Triangulo_acumulado_mitad.copy()\n",
        "            for i in list(reversed(range(num_filas))):\n",
        "                comodin = np.diag(np.fliplr(Triangulo_acumulado_mitad), 0)[i]\n",
        "                for j in range(1,i+1):\n",
        "                    Triangulo_estimado.iloc[i, -j] = comodin*factores.iloc[-i+9:-j+10].prod()   # Puedes establecerlo en None u otro valor si lo prefieres\n",
        "\n",
        "            reserva_total = sum(np.array(list(reversed(np.array(Triangulo_estimado[10]))))-np.flip(np.diag(np.fliplr(Triangulo_estimado), 0)))\n",
        "\n",
        "            diciconario_triangulo = {'Triangulo_full':Triangulo_full, \"Triangulo_full_acumulado\":Triangulo_full_acumulado,\n",
        "                                     \"Triangulo_acumulado_mitad\":Triangulo_acumulado_mitad, \"factores\":factores, \"Triangulo_estimado\":Triangulo_estimado,\n",
        "                                     \"reserva_total\":reserva_total}\n",
        "\n",
        "            nombre = \"Triangulo \" + str(k)\n",
        "            diccionario_todos_triangulos[nombre] = diciconario_triangulo\n",
        "\n",
        "        return diccionario_todos_triangulos\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "IVehRF4juGXH"
      },
      "outputs": [],
      "source": [
        "resultados = ChainLadder(tabla = df, origin = \"AccidentYear\", development = \"DevelopmentLag\", columns = \"IncurLoss_C\", index = \"GRCODE\")\n",
        "triangulos_resultados = resultados.Triangulos()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "PEdXdf5muGXH",
        "outputId": "06da08a8-6b65-4932-fc05-8363ed91fbd5"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "182561.19269760133"
            ]
          },
          "execution_count": 8,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "triangulos_resultados[\"Triangulo 353\"][\"reserva_total\"]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "MOhQ6MQwuGXH",
        "outputId": "3c8e776c-12ec-4220-a281-de572d7856b1"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>DevelopmentLag</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AccidentYear</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1988</th>\n",
              "      <td>3087</td>\n",
              "      <td>6917.000000</td>\n",
              "      <td>10646.000000</td>\n",
              "      <td>14502.000000</td>\n",
              "      <td>18395.000000</td>\n",
              "      <td>22300.000000</td>\n",
              "      <td>26218.000000</td>\n",
              "      <td>30136.000000</td>\n",
              "      <td>34053.000000</td>\n",
              "      <td>37970.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1989</th>\n",
              "      <td>3167</td>\n",
              "      <td>6017.000000</td>\n",
              "      <td>8707.000000</td>\n",
              "      <td>11240.000000</td>\n",
              "      <td>13768.000000</td>\n",
              "      <td>16301.000000</td>\n",
              "      <td>18844.000000</td>\n",
              "      <td>21388.000000</td>\n",
              "      <td>23927.000000</td>\n",
              "      <td>26679.240889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1990</th>\n",
              "      <td>3436</td>\n",
              "      <td>6929.000000</td>\n",
              "      <td>10512.000000</td>\n",
              "      <td>14542.000000</td>\n",
              "      <td>18654.000000</td>\n",
              "      <td>22742.000000</td>\n",
              "      <td>26856.000000</td>\n",
              "      <td>31028.000000</td>\n",
              "      <td>34915.834174</td>\n",
              "      <td>38932.083035</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1991</th>\n",
              "      <td>4039</td>\n",
              "      <td>8014.000000</td>\n",
              "      <td>11813.000000</td>\n",
              "      <td>15854.000000</td>\n",
              "      <td>20174.000000</td>\n",
              "      <td>24508.000000</td>\n",
              "      <td>28851.000000</td>\n",
              "      <td>33116.990906</td>\n",
              "      <td>37266.577377</td>\n",
              "      <td>41553.224180</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1992</th>\n",
              "      <td>3438</td>\n",
              "      <td>6613.000000</td>\n",
              "      <td>9853.000000</td>\n",
              "      <td>13418.000000</td>\n",
              "      <td>16969.000000</td>\n",
              "      <td>20537.000000</td>\n",
              "      <td>24105.635962</td>\n",
              "      <td>27669.963847</td>\n",
              "      <td>31137.033302</td>\n",
              "      <td>34718.619636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1993</th>\n",
              "      <td>4282</td>\n",
              "      <td>8604.000000</td>\n",
              "      <td>12274.000000</td>\n",
              "      <td>15608.000000</td>\n",
              "      <td>18893.000000</td>\n",
              "      <td>22851.165121</td>\n",
              "      <td>26821.924707</td>\n",
              "      <td>30787.890770</td>\n",
              "      <td>34645.639059</td>\n",
              "      <td>38630.808301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1994</th>\n",
              "      <td>4064</td>\n",
              "      <td>8798.000000</td>\n",
              "      <td>13954.000000</td>\n",
              "      <td>19265.000000</td>\n",
              "      <td>24171.281821</td>\n",
              "      <td>29235.269786</td>\n",
              "      <td>34315.370829</td>\n",
              "      <td>39389.339146</td>\n",
              "      <td>44324.856061</td>\n",
              "      <td>49423.392495</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1995</th>\n",
              "      <td>4189</td>\n",
              "      <td>8070.000000</td>\n",
              "      <td>12020.000000</td>\n",
              "      <td>16142.653326</td>\n",
              "      <td>20253.756703</td>\n",
              "      <td>24497.006232</td>\n",
              "      <td>28753.757335</td>\n",
              "      <td>33005.369664</td>\n",
              "      <td>37140.969900</td>\n",
              "      <td>41413.168505</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1996</th>\n",
              "      <td>4270</td>\n",
              "      <td>8302.000000</td>\n",
              "      <td>12430.293486</td>\n",
              "      <td>16693.670423</td>\n",
              "      <td>20945.103162</td>\n",
              "      <td>25333.192761</td>\n",
              "      <td>29735.244800</td>\n",
              "      <td>34131.982657</td>\n",
              "      <td>38408.748437</td>\n",
              "      <td>42826.775266</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1997</th>\n",
              "      <td>3332</td>\n",
              "      <td>6695.385847</td>\n",
              "      <td>10024.766452</td>\n",
              "      <td>13463.088977</td>\n",
              "      <td>16891.778762</td>\n",
              "      <td>20430.679387</td>\n",
              "      <td>23980.840423</td>\n",
              "      <td>27526.715685</td>\n",
              "      <td>30975.836026</td>\n",
              "      <td>34538.880390</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "DevelopmentLag    1            2             3             4             5   \\\n",
              "AccidentYear                                                                  \n",
              "1988            3087  6917.000000  10646.000000  14502.000000  18395.000000   \n",
              "1989            3167  6017.000000   8707.000000  11240.000000  13768.000000   \n",
              "1990            3436  6929.000000  10512.000000  14542.000000  18654.000000   \n",
              "1991            4039  8014.000000  11813.000000  15854.000000  20174.000000   \n",
              "1992            3438  6613.000000   9853.000000  13418.000000  16969.000000   \n",
              "1993            4282  8604.000000  12274.000000  15608.000000  18893.000000   \n",
              "1994            4064  8798.000000  13954.000000  19265.000000  24171.281821   \n",
              "1995            4189  8070.000000  12020.000000  16142.653326  20253.756703   \n",
              "1996            4270  8302.000000  12430.293486  16693.670423  20945.103162   \n",
              "1997            3332  6695.385847  10024.766452  13463.088977  16891.778762   \n",
              "\n",
              "DevelopmentLag            6             7             8             9   \\\n",
              "AccidentYear                                                             \n",
              "1988            22300.000000  26218.000000  30136.000000  34053.000000   \n",
              "1989            16301.000000  18844.000000  21388.000000  23927.000000   \n",
              "1990            22742.000000  26856.000000  31028.000000  34915.834174   \n",
              "1991            24508.000000  28851.000000  33116.990906  37266.577377   \n",
              "1992            20537.000000  24105.635962  27669.963847  31137.033302   \n",
              "1993            22851.165121  26821.924707  30787.890770  34645.639059   \n",
              "1994            29235.269786  34315.370829  39389.339146  44324.856061   \n",
              "1995            24497.006232  28753.757335  33005.369664  37140.969900   \n",
              "1996            25333.192761  29735.244800  34131.982657  38408.748437   \n",
              "1997            20430.679387  23980.840423  27526.715685  30975.836026   \n",
              "\n",
              "DevelopmentLag            10  \n",
              "AccidentYear                  \n",
              "1988            37970.000000  \n",
              "1989            26679.240889  \n",
              "1990            38932.083035  \n",
              "1991            41553.224180  \n",
              "1992            34718.619636  \n",
              "1993            38630.808301  \n",
              "1994            49423.392495  \n",
              "1995            41413.168505  \n",
              "1996            42826.775266  \n",
              "1997            34538.880390  "
            ]
          },
          "execution_count": 9,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "triangulos_resultados[\"Triangulo 353\"][\"Triangulo_estimado\"]"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5GzU86d6uGXI"
      },
      "source": [
        "cosas para hacer\n",
        "- diciconario de datos\n",
        "- es necesatio conseguir nuevos datos?\n",
        "- ¬øQu√© atributos (columnas) de la base de datos parecen m√°s prometedores?\n",
        "- ¬øQu√© atributos parecen irrelevantes y pueden excluirse?\n",
        "- ¬øExisten datos suficientes para sacar conclusiones generalizables o hacer predicciones precisas?\n",
        "- ¬øHay demasiados atributos para el m√©todo de modelado que elija?\n",
        "- ¬øEst√° fusionando varias fuentes de datos? Si es as√≠, ¬øhay √°reas que podr√≠an plantear un problema cuando\n",
        "fusion√°ndose?\n",
        "- ¬øHa considerado c√≥mo se manejan los valores faltantes en cada una de sus fuentes de datos?"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.16"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}